[{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Getting started","text":"vignette presents minimal Bayesian workflow modelling distribution discrete species abundance, \\(y\\), along environmental gradient, \\(x\\), using modskurt function predict mean abundance, \\(\\mu\\). diagram outlines key steps informative trustworthy analysis using modskurt package, also provides layout rest vignette. stage find needing information, please check references resources web page.","code":""},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"load-packages-and-stan-files","dir":"Articles","previous_headings":"","what":"Load packages and stan files","title":"Getting started","text":"section assumes ‚Äôve already got modskurt installed running, , jump packages‚Äô home page.","code":"# compile_stanmodels only runs when needed, so it doesn't hurt to keep these # lines together in any analysis library(modskurt) compile_stanmodels() ## [1] \"Already compiled: discrete.stan\" # everyone loves a good graph library(ggplot2) library(patchwork) theme_set(theme_classic())  # for reproducibility set.seed(123456)"},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"case-study---tuangi-vs--mud","dir":"Articles","previous_headings":"","what":"Case study - Tuangi vs.¬†mud","title":"Getting started","text":"illustrate modskurt workflow, ‚Äôll analyse distribution tuangi (Austrovenus stutchburyi, New Zealand cockle - info) counts along gradient estuarine sediment mud concentrations (0% muddy sediment 100% completely mud dominated - info). Key variables : count number individual tuangi recorded 250g composite sediment core. mud_pct percentage sediment particles core less 0.063mm diameter attribution technical details data collected, please contact Salt Ecology.","code":"data(tuangi) tuangi ## # A tibble: 764 √ó 11 ##    year    lon   lat count mud_pct tn_conc toc_pct tp_conc sst_min sst_avg ##    <chr> <dbl> <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> ##  1 2017   175. -40.5     0    19.8     250    0.32     380    12.8    15.3 ##  2 2018   175. -40.5     1    26.7     500    0.3      380    12.9    15.6 ##  3 2017   175. -40.5     0    20       250    0.29     370    12.8    15.3 ##  4 2018   175. -40.5     0    23.3     250    0.24     360    12.9    15.6 ##  5 2017   175. -40.5     1    17.2     250    0.28     350    12.8    15.3 ##  6 2018   175. -40.5     0    19.9     250    0.21     330    12.9    15.6 ##  7 2017   175. -40.5     0    26.9     250    0.28     380    12.8    15.3 ##  8 2018   175. -40.5     0    44.1     500    0.39     420    12.9    15.6 ##  9 2017   175. -40.5     0    22.5     250    0.26     380    12.8    15.3 ## 10 2018   175. -40.5     0    34.8     250    0.34     390    12.9    15.6 ## # ‚Ñπ 754 more rows ## # ‚Ñπ 1 more variable: sst_max <dbl>"},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"a--specify-initial-model","dir":"Articles","previous_headings":"","what":"A. Specify initial model","title":"Getting started","text":"first step analysis species‚Äô abundance environmental gradient specify distribution model. general discrete abundance data like , recommend first trying negative binomial (NB) regression, however may cases, particularly rare hard sample species, might worth going straight zero-inflated negative binomial linked (ZINBL) extension ‚Äì see ZINBL article example. Given negative binomial distribution abundance, \\(y\\), modskurt package specifies mean negative binomial distribution (expected abundance \\(\\mu = \\text{E}[y]\\)) non-linear function, \\(f\\) environmental gradient, \\(x\\), mud content case. Yielding following generalised non-linear regression model (GNLM): \\[ y_n \\sim \\text{NegativeBinomial}\\left[\\mu_n = f(x_n), \\kappa\\right] \\] subscript, \\(n\\), denotes \\(n\\)th sample abundance environmental gradient, \\(\\kappa\\) overdispersion parameter models variation abundance relative mean abundance. modskurt function, \\(f\\), visually unappealing, (believe us!) produces appealing realistic shapes mean abundance along environmental gradients: \\[ f(x_n) =   H \\bigg[r \\exp\\left(\\frac{1}{p}\\left[\\frac{x_n-m}{sr} - d\\right]\\right) +   (1 - r) \\exp\\left(\\frac{1}{p}\\left[d - \\frac{x_n-m}{s\\left(1 - r\\right)}\\right]\\right) - \\exp\\left(-\\frac{d}{p}\\right) + 1\\bigg] ^ {-p}, \\] parameters: \\(H \\\\mathbb{R}_{>0}\\): strictly positive maximum height curve; peak mean abundance along environmental gradient. \\(m \\\\mathbb{R}\\): environmental location peak mean abundance. \\(s \\\\mathbb{R}_{>0}\\): scales width curve, describing abundance decreases away \\(m\\). \\(r \\(0, 1)\\): accounts asymmetry, \\(r=0.5\\) indicating equal abundance environmental conditions either side \\(m\\), \\(r\\) \\(0.5\\) indicating abundance \\(m\\), \\(r\\) \\(0.5\\) indicating abundance \\(m\\). \\(d \\\\mathbb{R}\\): controls peakedness (\\(d < 0\\)) broadness (\\(d > 0\\), e.g.¬†plateau-like shape) peak mean abundance around \\(m\\). \\(p > 0\\): persists higher-levels abundance relatively extreme conditions; similar effect increasing tail weight distribution function. effect parameter best described visually, please check app haven‚Äôt already toggle different parameter values. parameters necessary every analysis, discussion best illustrated separate example. Bayesian model, get determine values parameter realistic given relationship wish model, rather whatever potentially unrealistic value fits data best. huge benefit Bayesian modelling, also huge hurdle dealing complex parameter spaces like model . make life easier, modskurt package suggests default priors just work ü§û: \\[ \\begin{align}   H &\\sim \\text{Beta}(2, 3) \\cdot \\max y \\\\   m &\\sim \\text{Beta}(1, 1) \\cdot \\text{range}~ x + \\min x \\\\   \\log s &\\sim \\text{Normal}(-2.0, 0.6) + \\log \\text{range}~ x \\\\   r &\\sim \\text{Beta}(1.2, 1.2) \\\\   \\log d &\\sim \\text{Normal}(0.5, 1.0) \\\\   p &\\sim \\text{Beta}(2, 4) \\cdot 1.95 + 0.05 \\\\   \\kappa &\\sim \\text{Exponential}(0.5), \\\\ \\end{align} \\] However, still need check every model provide guidance section B. See ‚Ä¶ technical details. Now finally, specify model R, use mskt_spec function: last argument, subset_prop = 0.3, defines proportion data used subset ‚Äúfail fast‚Äù model section C later . can print model spec defaults interest, hp_ refers hyperparameter values define priors .","code":"spec <-   mskt_spec(data = tuangi,             # response and gradients (optional names for tidier outputs)             y = c('Tuangi (count)' = 'count'),             x = c('Mud (%)' = 'mud_pct'),             # distribution of abundance             dist = 'nb',             # additional mean shape parameters to model, Hms are always required             shape = 'rdp',             # make predictions for every 1% of mud content             pred_grid = 0:100,             # check prior and initial fit on a subset of data             subset_prop = 0.3) str(spec) ## List of 21 ##  $ sample_prior: int 0 ##  $ hp_H        : num [1:2] 2 3 ##  $ hp_m        : num [1:2] 1 1 ##  $ hp_s        : num [1:2] -2 0.6 ##  $ hp_r        : num [1:2] 1.2 1.2 ##  $ hp_d        : num [1:2] 0.5 1 ##  $ hp_p        : num [1:2] 1.2 1.2 ##  $ use_r       : int 1 ##  $ fix_r       : num 0.5 ##  $ use_d       : int 1 ##  $ fix_d       : num 0 ##  $ use_p       : int 1 ##  $ fix_p       : num 1 ##  $ use_zi      : int 0 ##  $ hp_kap      : num 0.5 ##  $ hp_g0       : num [1:2] 3 1.5 ##  $ hp_g1       : num 5 ##  $ Nrep        : int 101 ##  $ xrep        : int [1:101] 0 1 2 3 4 5 6 7 8 9 ... ##  $ subset      :function ()   ##   ..- attr(*, \"srcref\")= 'srcref' int [1:8] 139 18 139 68 18 68 1759 1759 ##   .. ..- attr(*, \"srcfile\")=Classes 'srcfilealias', 'srcfile' <environment: 0x0000021f02c19158>  ##  $ full        :function (prop = 1, seed = NULL)   ##   ..- attr(*, \"srcref\")= 'srcref' int [1:8] 103 17 138 3 17 3 1723 1758 ##   .. ..- attr(*, \"srcfile\")=Classes 'srcfilealias', 'srcfile' <environment: 0x0000021f02c19158>  ##  - attr(*, \"pars\")= chr [1:7] \"H\" \"m\" \"s\" \"r\" ... ##  - attr(*, \"nms\")=List of 3 ##   ..$ y  : chr \"Tuangi (count)\" ##   ..$ x  : chr \"Mud (%)\" ##   ..$ eff: NULL ##  - attr(*, \"dist\")= chr \"nb\" ##  - attr(*, \"shape\")= chr \"rdp\" ##  - attr(*, \"class\")= chr [1:2] \"mskt-spec\" \"list\""},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"b--verify-initial-model-specification","dir":"Articles","previous_headings":"","what":"B. Verify initial model specification","title":"Getting started","text":"step helps key ways Provide greater transparency model assumptions greater understanding model mechanics, Verify model predicts results make sense best ecological knowledge, .e.¬†give weight illogical parameter values, thus estimate better measures uncertainty. Verify model predicts results might make sense, .e.¬†prior distributions overly constraining parameter space biasing results/uncertainty away potentially realistic outcomes. modskurt provides four checking functions: check_prior_dens: Plot marginal prior densities check probabilities align reasonable values. check_prior_mskt: Randomly sample joint prior check predictions mean, \\(\\mu\\), contain possible shapes sizes. check_prior_dist: Simulate \\(y\\) replicates joint prior model plot ‚Äúsevere tests‚Äù check overdispersion misspecification. check_prior_zero: Predict rates zero-inflation given mean check believable relationships ‚Äì ","code":""},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"prior-probabilities-of-parameter-values","dir":"Articles","previous_headings":"B. Verify initial model specification","what":"Prior probabilities of parameter values","title":"Getting started","text":"tweaked default hyperparameters , ‚Äôll want check produce correct marginal prior : TODO: add legend median, 50%HDI 99% line!","code":"check_prior_dens(spec)"},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"prior-predictions-for-the-modskurt-mean","dir":"Articles","previous_headings":"B. Verify initial model specification","what":"Prior predictions for the modskurt mean","title":"Getting started","text":"default looks like pile spaghetti, information mean shapes might expect, check reasonably covered impossible shapes excluded, leasted weighted heavily away : TODO: add legend alpha!","code":"check_prior_mskt(spec)"},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"prior-predictions-for-summary-statistics-of-y","dir":"Articles","previous_headings":"B. Verify initial model specification","what":"Prior predictions for summary statistics of y","title":"Getting started","text":"Severe tests specified distribution \\(y\\), idea check combination mean shapes overdisperion parameter, kappa, Maximum observable counts: much dispersion can produce counts might unrealistic even impossible given sampling design. Proportions zeros: much dispersion can also inflate proportion zeros beyond might credible, cause underestimation mean counts. Variation abundance: little dispersion (Poisson effect) can restrict model overestimating mean counts order try capture zero proportions higher counts.  TODO: change remove observed lines default? Looks maybe little many zeros data? Tuangi pretty common ‚Äôd highly unlikely find somewhere along mud gradient. maximum count predictions quite high well, counting 1500 tuangi single 250g core quite feat (unless tiny juveniles?). Lets tweak rate hyperparameter exponentially distributed overdispersion parameter, \\(\\kappa \\sim \\text{Exp}[\\lambda = \\text{hp_kap}]\\), slightly encourage smaller values overdispersion:  little better, little fine, remember prior model fit knowledge tuangi-mud relationship, specific data realisations . OPTIONAL: refine model spec ","code":"check_prior_dist(spec) spec$hp_kap <- 1 check_prior_dens(spec, 'kap') +    check_prior_dist(spec) +   plot_layout(design = 'A##\\nBBB')"},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"c--fit-subset-model","dir":"Articles","previous_headings":"","what":"C. Fit subset model","title":"Getting started","text":"prior model looks okay, let‚Äôs look posterior. idea subset model ‚Äúfail fast‚Äù. , missed model misspecification , instead wasting time computer resources fitting full model right bat, can first fit quick approximate model uses subset data minimal posterior samples maximal chains. chain roughly estimate posterior subset data, ‚Ä¶. Check computation. OPTIONAL: refine model spec fit parameters","code":"fit_subset <-   mskt_fit(spec,            # use the subset only            use_subset = TRUE,            iter_warmup = 200,            iter_sampling = 100,            chains = 6,            parallel_chains = 6,            # for testing            show_messages = TRUE, show_exceptions = TRUE) check_computation(fit_subset) ## spec: nb[Hmsrdp] using 229 obs out of 762 (30% sample) ## post: 6 chains each with 100 draws (600 total) ## $summary ## # A tibble: 7 √ó 10 ##   variable   mean median      sd     mad     q5    q95  rhat  ess_bulk  ess_tail ##   <chr>     <num>  <num>   <num>   <num>  <num>  <num> <rha>     <ess>     <ess> ## 1 H         8.63   8.60   0.976   0.960   7.14  10.4   0.999 440 (0.7) 439 (0.7) ## 2 m        14.3   14.3    7.26    7.59    2.41  25.9   1.035 198 (0.3) 164 (0.3) ## 3 s        27.6   25.6   11.8    10.2    12.6   48.9   1.008 183 (0.3) 125 (0.2) ## 4 r         0.611  0.629  0.173   0.202   0.325  0.857 1.013 269 (0.4) 343 (0.6) ## 5 d         2.27   1.81   1.73    1.40    0.355  5.81  1.023 174 (0.3) 123 (0.2) ## 6 p         1.18   1.25   0.512   0.603   0.265  1.89  1.012 519 (0.9) 303 (0.5) ## 7 kap       1.21   1.21   0.0711  0.0694  1.09   1.32  1.000 528 (0.9) 423 (0.7) ##  ## $diagnostics ##   chain_id warmup sampling total num_divergent num_max_treedepth     ebfmi ## 1        1  2.424    1.149 3.573             0                 0 0.9515648 ## 2        2  2.518    0.827 3.345             0                 0 1.2158109 ## 3        3  2.409    1.018 3.427             0                 0 0.8885822 ## 4        4  2.474    0.991 3.465             0                 0 0.8325988 ## 5        5  2.440    1.002 3.442             0                 0 0.8103148 ## 6        6  2.442    0.942 3.384             1                 0 0.8126523"},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"check-subset-model","dir":"Articles","previous_headings":"C. Fit subset model","what":"Check subset model","title":"Getting started","text":"Computation valid, check posterior.   OPTIONAL: refine model spec fit parameters","code":"# visual display of chain mixing and prior-data conflicts check_post_dens(fit_subset, by_chain = TRUE) # uses test set for discrete pit check_post_calibration(fit_subset)"},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"d--fit-full-model","dir":"Articles","previous_headings":"","what":"D. Fit full model","title":"Getting started","text":"Time comprehensive inference, using full dataset large number posterior samples. Check , slightly better. OPTIONAL: refine model spec fit parameters","code":"fit_full <-   mskt_fit(spec,            chains = 4,            parallel_chains = 4,            # for testing            show_messages = TRUE, show_exceptions = TRUE) check_computation(fit_full) ## spec: nb[Hmsrdp] using 762 obs out of 762 (100% sample) ## post: 4 chains each with 1000 draws (4000 total) ## $summary ## # A tibble: 7 √ó 10 ##   variable   mean median     sd    mad     q5    q95  rhat   ess_bulk   ess_tail ##   <chr>     <num>  <num>  <num>  <num>  <num>  <num> <rha>      <ess>      <ess> ## 1 H         8.26   8.22  0.658  0.639   7.22   9.41  1.002 1937 (0.5) 2006 (0.5) ## 2 m        14.3   14.0   2.86   2.74    9.82  19.3   1.002 1633 (0.4) 1739 (0.4) ## 3 s        22.9   22.4   5.43   5.26   14.6   32.0   1.008 1285 (0.3) 1729 (0.4) ## 4 r         0.770  0.789 0.0981 0.0837  0.578  0.889 1.001 1428 (0.4) 1472 (0.4) ## 5 d         1.52   1.35  0.895  0.803   0.393  3.30  1.009 1291 (0.3) 1744 (0.4) ## 6 p         1.20   1.25  0.475  0.549   0.347  1.89  1.000 2071 (0.5) 1998 (0.5) ## 7 kap       1.19   1.19  0.0368 0.0379  1.13   1.25  0.999 3118 (0.8) 2688 (0.7) ##  ## $diagnostics ##   chain_id warmup sampling  total num_divergent num_max_treedepth     ebfmi ## 1        1 24.404   23.492 47.896             1                 0 0.9774463 ## 2        2 26.578   33.715 60.293             0                 0 0.8960095 ## 3        3 25.355   28.945 54.300             0                 0 0.8544922 ## 4        4 26.263   30.564 56.827             0                 0 0.8961821"},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"check-full-model","dir":"Articles","previous_headings":"D. Fit full model","what":"Check full model","title":"Getting started","text":"Given subset model appeared adequately specified, computation diagnostics full model improved, shouldn‚Äôt need many checks . thorough wouldn‚Äôt hurt run check_post_dens, check_post_dist, check_post_zero, check_post_calibration, getting started vignette just show one additional check. Now posterior estimated entire data set, want make sure subset data used earlier reasonable representation full dataset. useful check consider influence data point posterior. somewhat similar checking linear regression residual plot, data points model couldn‚Äôt predict well, data points really unusual, model misspecified subset model checks didn‚Äôt pick .  model struggled predict one point, console printout shows nothing unusual point (count = 2, mud % = 31.8) safe ignore. Later plots suggest maybe around 30-34% mud content data dispersed rest, likely clear data collected. OPTIONAL: refine model spec fit parameters.","code":"check_post_influencers(fit_full)"},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"e--use-the-model","dir":"Articles","previous_headings":"","what":"E. Use the model","title":"Getting started","text":"Now can look predictions specific interest: distribution tuangi mud concentrations look like, ranges mud concentrations correlate higher abundances tuangi.","code":""},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"plot-summaries-of-the-abundance-distribution","dir":"Articles","previous_headings":"E. Use the model","what":"Plot summaries of the abundance distribution","title":"Getting started","text":"complete distribution, choose summaries informative.","code":"# plot the distribution of abundance along the gradient abundance_dist(fit_full, summaries = c('mean', 'median', 'q90'))"},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"calculate-ranges-of-x-for-different-percentages-of-abundance-measures","dir":"Articles","previous_headings":"E. Use the model","what":"Calculate ranges of x for different percentages of abundance measures","title":"Getting started","text":"Going back original question, ranges mud concentrations tuangi abundant ? ‚Äôs two useful ways look , : Calculate range mud concentrations correspond highest levels predicted tuangi abundance (high-abundance-zone, HAZ), Determine limit mud concentration beyond less certain level predicted total tuangi abundance resides (abundance-density-limit, ADL). Loosely speaking interpret ranges , HAZ: mud concentrations optimal tuangi (correspond optimal environmental conditions) ADL: line sand (mud) expect find proportion total population sampled. important arguments capture_pct based_on, decide percent abundance (high zone density) range capture, distribution summary range percent based . example based_on = 'mean' use predicted modskurt mean abundance. based_on = 'q90' use 0.9 probability quantile predicted abundance. choice summary capture percentages depend question answered. data might start looking range mud concentrations expect find 50% highest average tuangi counts, capture_pct = 50% using_range = 'HAZ' based_on = 'mean' tuangi counts (left hand red plot). upper limit mud concentrations beyond less capture_pct = 10% predicted tuangi density (using_range = 'ADL') based_on = 'mean' predicted counts.  console printout shows sediment 0% 46% mud content average tuangi counts within half (50%) peak average counts. Compare numbers abundance density limit suggest 90% predicted total mean tuangi abundance found sediment less 60.7% mud content.","code":"# compose in row using patchwork (abundance_range(fit_full,                  capture_pct = 50,                  using_range = 'HAZ',                  based_on = 'mean',                  plotted = TRUE,                  range_colour = 'red') +    labs(subtitle = '50% of highest mean counts')) +    (abundance_range(fit_full,                    capture_pct = 90,                    using_range = 'ADL',                    based_on = 'mean',                    # specify left or right side limit                    region = 'left',                    plotted = TRUE,                    range_colour = 'blue') +      labs(y = NULL, subtitle = '90% limit of mean count density')) +   plot_layout(guides = 'collect') ##  ## Species range (see x.avg row) calculated as the  (averaged across posterior draws): ##                left      centre       right ## mean.avg 4.61090497  8.20110380  4.10910425 ## mean.se  0.08438676  0.09694215  0.04775475 ## x.avg    0.49785178 14.16000000 46.61076990 ## x.se     0.10869801  0.40341400  0.48788582 ##  ## Species range (see x.avg row) calculated as the  (averaged across posterior draws): ##               left     centre       right ## mean.avg 4.2890112  7.2015242  2.37501269 ## mean.se  0.1177878  0.0939659  0.03865507 ## x.avg    0.0000000 26.1261025 60.32001383 ## x.se     0.0000000  0.1672911  0.39998770"},{"path":"https://hdrab127.github.io/modskurt/articles/getting-started.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Getting started","text":"case study lightly stepped core steps modskurt analysis species abundance environmental gradients. many checks can performed throughout, whole raft troubleshooting exercises data doesn‚Äôt play nicely tuangi abundances . List articles resources","code":""},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Linked zero-inflation","text":"Getting started article showed model negative binomial distribution species abundance along environmental gradient using modskurt mean function. ‚Äôve found vast majority species-environment relationships, abundance can reasonably characterised negative binomial distribution. However, rare hard detect species, can zero counts ‚Äúexcess‚Äù negative binomial distribution predict. say , mathematically, negative binomial distribution can predict extremely high proportions zeros, although achieve require extremely high dispersion parameter values. quite restricting practice, mechanisms can cause high zero proportions may also produce extremely disperse data. increase zero-rates, maintaining realistic dispersion abundance, zero-inflated negative binomial can used point probability mass added zero. can work well simple models, generalised models like modskurt ones, often relationship mean abundance zero rates different environmental conditions. example, mean abundances zero rates usually quite different conditions species commonly found easy detect, versus intolerable conditions hard sample species . reason, modskurt model utilises zero-iinflated negative binomial excess-zero probability linked (ZINBL) mean abundances logistic regression. formula distribution covered later, work another case study.","code":""},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"load-packages-and-stan-files","dir":"Articles","previous_headings":"","what":"Load packages and stan files","title":"Linked zero-inflation","text":"","code":"library(modskurt) compile_stanmodels() ## [1] \"Already compiled: discrete.stan\" # everyone loves a good graph library(ggplot2) library(patchwork) theme_set(theme_classic())  # for reproducibility set.seed(123456)"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"case-study---sebastes-proriger-vs--water-temperature","dir":"Articles","previous_headings":"","what":"Case study - Sebastes proriger vs.¬†water temperature","title":"Linked zero-inflation","text":"ZINBL distributions abundance typically fruitful proportions zeros high, like \\(>0.95\\) high. great example Northwest Pacific groundfish trawl survey data Sebastes proriger (redstripe rockfish) ocean temperature gradient - info. Key variables : total_count number individual redstripes caught trawl. temp average water temperature recorded net trawl. area_swept total area (ha) water swept trawl (trawl length * net mouth diameter), sampling effort used observe total_count.","code":"data(redstripe) redstripe ## # A tibble: 2,330 √ó 8 ##    date       depth area_swept    do  temp   sal total_kg total_count ##    <date>     <dbl>      <dbl> <dbl> <dbl> <dbl>    <dbl>       <dbl> ##  1 2012-07-14  57         1.70 4.58  12.5   33.6        0           0 ##  2 2010-06-26  57.2       1.34 2.01   8.92  34.0        0           0 ##  3 2012-06-30  57.6       1.70 1.03   8.50  34.0        0           0 ##  4 2008-10-21  58.6       1.40 3.95  11.9   33.6        0           0 ##  5 2013-07-20  58.6       1.51 3.10  10.5   33.6        0           0 ##  6 2010-10-06  59.1       1.48 2.69  11.0   33.6        0           0 ##  7 2013-06-29  59.2       1.55 0.819  8.71  34.0        0           0 ##  8 2011-10-11  59.3       1.67 4.11  11.2   33.4        0           0 ##  9 2010-09-16  59.4       1.57 2.39   8.55  33.8        0           0 ## 10 2010-06-22  59.4       1.63 2.01   7.28  34.0        0           0 ## # ‚Ñπ 2,320 more rows"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"a--specify-initial-model","dir":"Articles","previous_headings":"","what":"A. Specify initial model","title":"Linked zero-inflation","text":"ZINBL distribution defined mixture negative binomial distribution bernoulli process mixing proportion, \\(\\pi\\) modelled decreasing logistic function modskurt mean abundance, \\(\\mu\\), \\[ \\begin{aligned} y_n &\\sim \\text{ZINBL}\\left[\\mu_n = \\text{Modskurt}(x_n), \\kappa, \\pi_n\\right] \\\\ &= \\pi_n \\cdot (y_n == 0) + (1 - \\pi_n) \\cdot \\text{NB}(\\mu_n, \\phi) \\\\ \\text{logit}^{-1}~\\pi_n &= \\gamma_0 - \\gamma_1 \\cdot \\mu_n \\end{aligned} \\] new parameters: \\(\\gamma_0 \\\\mathbb{R}\\): log-odds intercept probability observing excess-zero, \\(\\gamma_1 > 0\\): describes rate excess-zero probability decreases average abundance increases. \\(\\gamma_0 \\0\\) \\(\\gamma_1 \\\\infty\\), \\(\\pi \\0\\) ZINBL reduces NB distribution. Muck around parameters . negative binomial model, modskurt package suggests default priors just work ü§ûü§û: \\[ \\begin{align} \\kappa &\\sim \\text{Exponential}(0.5) \\\\ \\gamma_0 &\\sim \\text{Normal}(3.0, 1.5) \\\\ \\gamma_1 &\\sim \\text{HalfNormal}(5.0) \\end{align} \\] Note, now sampling effort, can internally standardise counts catch per unit effort (CPUE), \\(y / \\text{area_swept}\\), model using \\[ y_n \\sim \\text{ZINBL}\\left[\\text{area_swept} \\cdot \\mu_n, \\kappa, \\pi_n\\right] \\] Specifying model R: quick look model spec full dataset shows zero proportion \\(2252 / 2330 = 0.97\\):","code":"spec <-   mskt_spec(data = redstripe,             # total_count is being modelled as CPUE by including effort             y = c('Sebastes proriger (CPUE)' = 'total_count'),             x = c('SST (¬∞C)' = 'temp'),             effort = c('Area swept (ha)' = 'area_swept'),             dist = 'zinbl',             shape = 'rdp',             subset_prop = 0.3) str(spec$full()) ## List of 4 ##  $ train:List of 10 ##   ..$ y          : int [1:2330] 0 0 0 0 0 0 0 0 0 0 ... ##   ..$ x          : num [1:2330] 7.49 11.78 7.01 6.45 11.05 ... ##   ..$ eff        : num [1:2330] 1.4 1.69 1.44 1.64 1.66 ... ##   ..$ N          : int 2330 ##   ..$ Nz         : int 2252 ##   ..$ x_range    : num 9.1 ##   ..$ x_pos_range: num 3.57 ##   ..$ x_min      : num 5.45 ##   ..$ x_pos_min  : num 6.28 ##   ..$ y_max      : int 35314 ##  $ all  :'data.frame':   2330 obs. of  4 variables: ##   ..$ y  : int [1:2330] 0 0 0 0 0 0 0 0 0 0 ... ##   ..$ x  : num [1:2330] 12.45 8.92 8.5 11.85 10.51 ... ##   ..$ eff: num [1:2330] 1.7 1.34 1.7 1.4 1.51 ... ##   ..$ set: chr [1:2330] \"train\" \"train\" \"train\" \"train\" ... ##  $ prop : num 1 ##  $ seed : NULL"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"b--verify-initial-model-specification","dir":"Articles","previous_headings":"","what":"B. Verify initial model specification","title":"Linked zero-inflation","text":"much getting started, except now can look new linked zero inflation parameters, excess-zero probabilities predict.","code":""},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"prior-probabilities-of-parameter-values","dir":"Articles","previous_headings":"B. Verify initial model specification","what":"Prior probabilities of parameter values","title":"Linked zero-inflation","text":"TODO: add legend median, 50%HDI 99% line!","code":"check_prior_dens(spec)"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"prior-predictions-for-the-modskurt-mean","dir":"Articles","previous_headings":"B. Verify initial model specification","what":"Prior predictions for the modskurt mean","title":"Linked zero-inflation","text":"Note values m default constrained within range x least one non-zero abundance, y, recorded. effect quite visible looking prior predictions mean abundance: TODO: add legend alpha!","code":"check_prior_mskt(spec)"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"prior-predictions-for-summary-statistics-of-y","dir":"Articles","previous_headings":"B. Verify initial model specification","what":"Prior predictions for summary statistics of \\(y\\)","title":"Linked zero-inflation","text":"Dispersion little high ?","code":"check_prior_dist(spec)"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"prior-predictions-for-probability-of-excess-zero-pi","dir":"Articles","previous_headings":"B. Verify initial model specification","what":"Prior predictions for probability of excess zero \\(\\pi\\)","title":"Linked zero-inflation","text":"new test, showing excess-zero probabilities interact mean abundances using simple bell-shaped mean shape (black line). shape mean doesn‚Äôt really matter, ‚Äôs looking excess probabilities decrease relative mean abundance. difference zero-probabilities plain nb strikingly lower zinbl, nb zero-probability quickly reduces mean increases, zinbl model keeps lot higher till mean abundances almost reach peak:  OPTIONAL: refine model spec ","code":"check_prior_zero(spec)"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"c--fit-subset-model","dir":"Articles","previous_headings":"","what":"C. Fit subset model","title":"Linked zero-inflation","text":"Hopefully ‚Äôre happy model specification prior checks ? can proceed posterior checks using ‚Äúsubset‚Äù mudel: divergences like raise initial warning posterior simple compute. Summaries m parameter confirm , chains may mixed (independently sampled posterior parameter space): OPTIONAL: refine model spec fit parameters","code":"fit_subset <-   mskt_fit(spec,            use_subset = TRUE,            iter_warmup = 200,            iter_sampling = 100,            chains = 6,            parallel_chains = 6,            # for debugging            show_messages = TRUE, show_exceptions = TRUE) check_computation(fit_subset) ## spec: zinbl[Hmsrdp] using 699 obs out of 2330 (30% sample) ## post: 6 chains each with 100 draws (600 total) ## $summary ## # A tibble: 9 √ó 10 ##   variable    mean  median      sd     mad     q5     q95   rhat  ess_bulk ##   <chr>      <num>   <num>   <num>   <num>  <num>   <num> <rhat>     <ess> ## 1 H        277.    221.    194.    130.    94.7   657.      1.02 203 (0.3) ## 2 m          6.70    6.67    0.200   0.201  6.40    7.07    1.05 101 (0.2) ## 3 s          0.389   0.348   0.172   0.156  0.168   0.712   1.03 182 (0.3) ## 4 r          0.672   0.704   0.191   0.199  0.317   0.934   1.02 242 (0.4) ## 5 d          2.65    1.98    2.18    1.58   0.449   7.07    1.02 197 (0.3) ## 6 p          1.07    1.07    0.515   0.653  0.246   1.85    1.02 335 (0.6) ## 7 kap        2.10    2.08    0.238   0.233  1.74    2.55    1.01 282 (0.5) ## 8 g0[1]      3.94    3.89    0.345   0.359  3.42    4.51    1.04 171 (0.3) ## 9 g1[1]      1.05    1.05    0.276   0.291  0.596   1.50    1.04 161 (0.3) ## # ‚Ñπ 1 more variable: ess_tail <ess> ##  ## $diagnostics ##   chain_id warmup sampling  total num_divergent num_max_treedepth     ebfmi ## 1        1  6.631    3.320  9.951             2                 0 0.8508828 ## 2        2  6.530    3.026  9.556             1                 0 1.1861269 ## 3        3  5.017    2.603  7.620             5                 0 1.0944825 ## 4        4  5.221    2.190  7.411            18                 0 0.9643593 ## 5        5  6.827    3.504 10.331             2                 0 1.0613385 ## 6        6  6.935    2.892  9.827             1                 0 0.8744557"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"check-subset-model","dir":"Articles","previous_headings":"C. Fit subset model","what":"Check subset model","title":"Linked zero-inflation","text":"dig deeper high rhat, \\(\\hat{R}\\), values m can look marginal posterior distributions chain:  m issue isn‚Äôt apparent visually, ‚Äôs something m r discussed thesis. Moving forward, can compare CDF posterior predictive distribution vs empirical CDF‚Äôs training test data using discrete probability integral transform plot:  little uptick end suggests posterior distribution predicts training (subset, seen) data test (unseen) data well highest counts, might slightly underdispersed (.e., underpredicting max counts). check bayesplot package using similar methods check_prior_dist .  OPTIONAL: refine model spec fit parameters","code":"# visual display of chain mixing and prior-data conflicts check_post_dens(fit_subset, by_chain = TRUE) # uses test set for discrete pit check_post_calibration(fit_subset) bayesplot::ppc_stat(y = spec$subset()$train$y,                     yrep = fit_subset$draws('y_rep', format = 'matrix'),                     stat = 'max')"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"d--fit-full-model","dir":"Articles","previous_headings":"","what":"D. Fit full model","title":"Linked zero-inflation","text":"Alright, concerns chains mixing , enough suggest gross posterior misspecification. just , added complexity zinbl model sparser data, computation needs little time learn posterior curvature. increasing warm-iterations default 1000 per chain: Less divergences , increasing adapt_delta clear . parameter diagnostics look good: OPTIONAL: refine model spec fit parameters","code":"fit_full <-   mskt_fit(spec,            iter_warmup = 1000,            iter_sampling = 1000,            chains = 4,            parallel_chains = 4,            # we could also take smaller steps around the posterior using            # adapt_delta > 0.8, but better to avoid if possible            # for testing            show_messages = TRUE, show_exceptions = TRUE) check_computation(fit_full,                   # to save console space                   hide_stats = c('mean', 'sd')) ## spec: zinbl[Hmsrdp] using 2330 obs out of 2330 (100% sample) ## post: 4 chains each with 1000 draws (4000 total) ## $summary ## # A tibble: 9 √ó 8 ##   variable  median     mad      q5      q95   rhat   ess_bulk   ess_tail ##   <chr>      <num>   <num>   <num>    <num> <rhat>      <ess>      <ess> ## 1 H        792.    257.    476.    1484.         1 3132 (0.8) 2272 (0.6) ## 2 m          6.60    0.157   6.39     6.87       1 1651 (0.4) 1593 (0.4) ## 3 s          0.513   0.135   0.346    0.844      1 1998 (0.5) 2290 (0.6) ## 4 r          0.822   0.132   0.527    0.962      1 1703 (0.4) 2434 (0.6) ## 5 d          1.70    0.852   0.596    3.57       1 1890 (0.5) 1929 (0.5) ## 6 p          0.693   0.611   0.106    1.76       1 2598 (0.6) 1744 (0.4) ## 7 kap        2.32    0.144   2.10     2.57       1 3055 (0.8) 2570 (0.6) ## 8 g0[1]      4.39    0.255   4.01     4.83       1 2288 (0.6) 2303 (0.6) ## 9 g1[1]      1.21    0.189   0.908    1.53       1 2271 (0.6) 1789 (0.4) ##  ## $diagnostics ##   chain_id warmup sampling   total num_divergent num_max_treedepth     ebfmi ## 1        1 79.352   64.259 143.611            24                 0 0.9714918 ## 2        2 72.442   73.374 145.816            18                 0 0.9745719 ## 3        3 65.360   78.242 143.602            13                 0 0.9514785 ## 4        4 67.249   78.436 145.685            24                 0 1.0103720"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"check-full-model","dir":"Articles","previous_headings":"D. Fit full model","what":"Check full model","title":"Linked zero-inflation","text":"Can check marginal posterior distributions parameter :  Much certain, precise. Using approximate leave-one-cross-validation (LOO-CV) can identify data points posterior struggles predict:  zero-counts mid-range temperatures, possibly complex interaction mean shape, dispersion, linked zero-inflation struggling ever slightly. OPTIONAL: refine model spec fit parameters.","code":"check_post_dens(fit_full, by_chain = TRUE) # can be slow for large N check_post_influencers(fit_full) ##               pareto_khat Sebastes proriger (CPUE) SST (¬∞C) Area swept (ha) ## log_lik[1723]        0.50                        0      9.2             1.7 ## log_lik[1986]        0.55                        0      6.4             1.9 ## log_lik[2287]        0.69                        0      6.3             1.8 ## log_lik[2330]        1.63                        0      6.1             1.5"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"e--use-the-model","dir":"Articles","previous_headings":"","what":"E. Use the model","title":"Linked zero-inflation","text":"fun(ner) part!","code":""},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"plot-summaries-of-the-abundance-distribution","dir":"Articles","previous_headings":"E. Use the model","what":"Plot summaries of the abundance distribution","title":"Linked zero-inflation","text":"‚Äôll plot non zero-inflated modskurt mean get idea average redstripe CPUE absence excess-zeros:","code":"# plot the distribution of abundance along the gradient abundance_dist(fit_full,                include_zero_inflation = FALSE,                summaries = c('mean')) +   scale_y_sqrt()"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"calculate-ranges-of-x-for-different-percentages-of-abundance-measures","dir":"Articles","previous_headings":"E. Use the model","what":"Calculate ranges of x for different percentages of abundance measures","title":"Linked zero-inflation","text":"quick look temperatures greater half highest predicted mean CPUE:  \\(6.3\\) \\(7.5\\) degree celsius, may useful, somewhere?","code":"abundance_range(fit_full,                 capture_pct = 50,                 using_range = 'HAZ',                 based_on = 'mean',                 include_zero_inflation = FALSE,                 plotted = TRUE) +   labs(subtitle = '50% of highest mean counts') +   scale_y_sqrt() ##  ## Species range (see x.avg row) calculated as the  (averaged across posterior draws): ##                  left       centre        right ## mean.avg 670.44891756 904.81914000 474.51893029 ## mean.se   49.18261339  53.03304984  27.64652351 ## x.avg      6.33893171   6.61184220   7.51756997 ## x.se       0.02492162   0.01915691   0.02178029"},{"path":"https://hdrab127.github.io/modskurt/articles/linked-zero-inflation.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Linked zero-inflation","text":"article stepped modskurt workflow ZINBL (zero-inflated negative binomial excess-zero probability linked negative binomial mean) model redstripe rockfish abundance different water temperatures. ZINBL model powerful, possibly limited sparse data careful prior specification reliably estimate credible posterior complex likelihood surface.","code":""},{"path":"https://hdrab127.github.io/modskurt/articles/prior-specification.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Prior specification","text":"Encoding prior information model via prior probability distributions rarely simple mapping. need ensure prior distributions give credible probabilities observing parameters values, together, joint prior distribution predicts credible outcomes interest. practice, prior specification requires bit tinkering correctly encode information priors parameters interpretable values, predictions joint priors parameters less interpretable values. clear, don‚Äôt want priors overfit specific realisation data available, instead prior generalise plausible data generated species-environment relationship wish model. Two articles created help encode information priors modskurt models: modskurt mean function describes shape average abundance along gradient question: Modskurt priors negative binomial-based abundance distributions describe probability observing different species counts excess-zeros given modskurt mean: ZINBL priors","code":""},{"path":"https://hdrab127.github.io/modskurt/articles/prior-specification.html","id":"in-practice","dir":"Articles","previous_headings":"","what":"In practice","title":"Prior specification","text":"Todo‚Ä¶","code":""},{"path":"https://hdrab127.github.io/modskurt/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hayden Rabel. Author, maintainer. Adam Smith. Author. Marti Anderson. Author. team PRIMER-e. Author.","code":""},{"path":"https://hdrab127.github.io/modskurt/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rabel H, Smith , Anderson M, PRIMER-e t (2023). modskurt: Bayesian Distributions Species Abundance Along Environmental Gradients. R package version 0.2.1, https://hdrab127.github.io/modskurt/.","code":"@Manual{,   title = {modskurt: Bayesian Distributions of Species Abundance Along Environmental Gradients},   author = {Hayden Rabel and Adam Smith and Marti Anderson and the team {at PRIMER-e}},   year = {2023},   note = {R package version 0.2.1},   url = {https://hdrab127.github.io/modskurt/}, }"},{"path":"https://hdrab127.github.io/modskurt/index.html","id":"modskurt-","dir":"","previous_headings":"","what":"Bayesian Distributions of Species Abundance Along Environmental Gradients","title":"Bayesian Distributions of Species Abundance Along Environmental Gradients","text":"Bayesian modelling species abundance distributions along environmental gradients","code":""},{"path":"https://hdrab127.github.io/modskurt/index.html","id":"installing-modskurt","dir":"","previous_headings":"","what":"Installing modskurt","title":"Bayesian Distributions of Species Abundance Along Environmental Gradients","text":"modskurt package utilises Stan Bayesian modelling software implemented R cmdstanr package. early stage package development, modskurt focused latest advancements, rather backwards compatibility. means ‚Äôll need latest version R (>=4.3.1), Rtools (>=4.3) development version cmdstanr (>=0.5.3) get going. Check R.version Rtools version (devtools::has_devel(debug = TRUE)) numbers update needed. install development version cmdstanr interface, try running: cmdstan program cmdstanr provides interface installed using: hiccups errors, follow guide cmdstanr website: https://mc-stan.org/cmdstanr/articles/cmdstanr.html, log issue modskurt github. Now install alpha version modskurt: finally, compile modskurt Stan models computer:","code":"# install.packages('pak') # <- if needed pak::pkg_install('stan-dev/cmdstanr') library(cmdstanr) check_cmdstan_toolchain(fix = TRUE) install_cmdstan(cores = 2) pak::pkg_install('hdrab127/modskurt') library(modskurt) # only compiles when needed, e.g. after package install or update compile_stanmodels()"},{"path":"https://hdrab127.github.io/modskurt/index.html","id":"checking-the-installation","dir":"","previous_headings":"","what":"Checking the installation","title":"Bayesian Distributions of Species Abundance Along Environmental Gradients","text":"check installation worked, try fitting simple negative binomial regression assymetric modskurt mean shape. Don‚Äôt worry parameters functions just yet - everything explained Getting started guide.","code":"# model specification with fake data spec <-   mskt_spec(data = mskt_sim_nb(x = 0:50,                                 H = 100,                                m = 35,                                s = 40,                                r = 0.9,                                kap = 0.5),             y = c('Abundance (count)' = 'y'),             x = c('Env gradient' = 'x'),             dist = 'nb')  # fit a minimal model (with less than optimal iterations) fit <- mskt_fit(spec,                 iter_warmup = 200,                 iter_sampling = 100)  # check the posterior summary and computation diagnostics check_computation(fit)  # plot the abundance distribution abundance_dist(fit)"},{"path":"https://hdrab127.github.io/modskurt/index.html","id":"how-to-use-the-modskurt-package","dir":"","previous_headings":"","what":"How to use the modskurt package","title":"Bayesian Distributions of Species Abundance Along Environmental Gradients","text":"See Getting started worked example recommended workflow analysing nonlinear modskurt models distribution species‚Äô abundance along environmental gradients. articles follow.","code":""},{"path":"https://hdrab127.github.io/modskurt/index.html","id":"roadmap-and-contribution","dir":"","previous_headings":"","what":"Roadmap and contribution","title":"Bayesian Distributions of Species Abundance Along Environmental Gradients","text":"current development version modskurt package much infancy. Potential additions vague order priority : ¬† vignettes examples ¬† Model comparison (e.g.¬†nb zinbl) ¬† Continuous abundance (like biomass) ¬† Binary package Cran drat ¬† Random effects ¬† Temporal effects ¬† Multiple gradients (2d modskurts) ¬† Multiple species ¬† ‚Ä¶","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/abundance_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution of abundance along the environmental gradient ‚Äî abundance_dist","title":"Distribution of abundance along the environmental gradient ‚Äî abundance_dist","text":"Distribution abundance along environmental gradient","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/abundance_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution of abundance along the environmental gradient ‚Äî abundance_dist","text":"","code":"abundance_dist(   fit,   seed = NULL,   ndraws = 50,   summaries = c(\"mean\", \"q90\"),   include_zero_inflation = TRUE,   point_alpha = 0.2,   line_alpha = 0.1 )"},{"path":"https://hdrab127.github.io/modskurt/reference/abundance_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution of abundance along the environmental gradient ‚Äî abundance_dist","text":"fit modskurt_fit object seed optional seed ndraws sample ndraws optional subset posterior draws summaries character vector distribution summarise, see details include_zero_inflation whether include zero-inflation summaries point_alpha opacity data points, default 0.1 good ~ 1000 obs line_alpha opacity summary lines, default 0.1 good ~ 50 draws","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/abundance_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution of abundance along the environmental gradient ‚Äî abundance_dist","text":"ggplot object","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/abundance_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess abundance range along x using distributional measures ‚Äî abundance_range","title":"Assess abundance range along x using distributional measures ‚Äî abundance_range","text":"Assess abundance range along x using distributional measures","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/abundance_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess abundance range along x using distributional measures ‚Äî abundance_range","text":"","code":"abundance_range(   fit,   seed = NULL,   ndraws = 50,   capture_pct = 80,   using_range = \"HAZ\",   based_on = \"median\",   region = \"centre\",   include_zero_inflation = FALSE,   plotted = FALSE,   point_alpha = 0.2,   line_alpha = 0.02,   range_colour = \"#22CC99\" )"},{"path":"https://hdrab127.github.io/modskurt/reference/abundance_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess abundance range along x using distributional measures ‚Äî abundance_range","text":"fit modskurt_fit object seed optional seed ndraws sample ndraws optional subset posterior draws capture_pct percent total abundance density (most_dens) percent tolerance highest abundance summary (high_zone), based \"based_on\" summary abundance using_range \"ADL\" highest abundance density limit, \"HAZ\" highest abundance zone, see details based_on distribution summary use density high zone, one \"mean\", \"median\", quantile proportion \"q\" + pecentage (e.g. \"q90\" = 90% quantile) region one-sided threshold (\"left\", \"right\") central range (\"centre\") include_zero_inflation whether use expectations quantiles nb zinbl plotted plot abundance distribution point_alpha opacity data points, default 0.1 good ~ 1000 obs line_alpha opacity summary lines, default 0.1 good ~ 50 draws range_colour colour range geometries","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/abundance_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess abundance range along x using distributional measures ‚Äî abundance_range","text":"matrix ranges, ggplot object plotted TRUE","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_computation.html","id":null,"dir":"Reference","previous_headings":"","what":"Check posterior computation is acceptable ‚Äî check_computation","title":"Check posterior computation is acceptable ‚Äî check_computation","text":"Check posterior computation acceptable","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_computation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check posterior computation is acceptable ‚Äî check_computation","text":"","code":"check_computation(fit, show_info = TRUE, hide_stats = c())"},{"path":"https://hdrab127.github.io/modskurt/reference/check_computation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check posterior computation is acceptable ‚Äî check_computation","text":"fit fitted model object `mskt_fit` show_info print information model spec posterior sample hide_stats summary stats hide","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_computation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check posterior computation is acceptable ‚Äî check_computation","text":"list ...","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_post_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Check prediction calibration using discrete PIT histograms ‚Äî check_post_calibration","title":"Check prediction calibration using discrete PIT histograms ‚Äî check_post_calibration","text":"Check prediction calibration using discrete PIT histograms","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_post_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check prediction calibration using discrete PIT histograms ‚Äî check_post_calibration","text":"","code":"check_post_calibration(fit, ndraws = 50)"},{"path":"https://hdrab127.github.io/modskurt/reference/check_post_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check prediction calibration using discrete PIT histograms ‚Äî check_post_calibration","text":"fit fitted model object `mskt_fit` ndraws number draws joint posterior use","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_post_dens.html","id":null,"dir":"Reference","previous_headings":"","what":"visual display of chain mixing and prior-data conflicts ‚Äî check_post_dens","title":"visual display of chain mixing and prior-data conflicts ‚Äî check_post_dens","text":"visual display chain mixing prior-data conflicts","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_post_dens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visual display of chain mixing and prior-data conflicts ‚Äî check_post_dens","text":"","code":"check_post_dens(   fit,   pars = attr(spec, \"pars\"),   prob_inner = 0.5,   prob_outer = 0.99,   by_chain = FALSE )"},{"path":"https://hdrab127.github.io/modskurt/reference/check_post_dens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visual display of chain mixing and prior-data conflicts ‚Äî check_post_dens","text":"fit fitted model object `mskt_fit` pars parameters plot densities , default prob_inner inner probability (high density interval) highlight prob_outer outer probability range plot density by_chain plot chains separately identify multiple modes mixing issues","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_post_influencers.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for posterior misspecification by assessing influence data points ‚Äî check_post_influencers","title":"Check for posterior misspecification by assessing influence data points ‚Äî check_post_influencers","text":"Check posterior misspecification assessing influence data points","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_post_influencers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for posterior misspecification by assessing influence data points ‚Äî check_post_influencers","text":"","code":"check_post_influencers(fit)"},{"path":"https://hdrab127.github.io/modskurt/reference/check_post_influencers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for posterior misspecification by assessing influence data points ‚Äî check_post_influencers","text":"fit fitted model object `mskt_fit`","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_dens.html","id":null,"dir":"Reference","previous_headings":"","what":"Check marginal prior densities are encoded correctly ‚Äî check_prior_dens","title":"Check marginal prior densities are encoded correctly ‚Äî check_prior_dens","text":"Check marginal prior densities encoded correctly","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_dens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check marginal prior densities are encoded correctly ‚Äî check_prior_dens","text":"","code":"check_prior_dens(   spec,   pars = attr(spec, \"pars\"),   use_subset = TRUE,   prob_inner = 0.5,   prob_outer = 0.99 )"},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_dens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check marginal prior densities are encoded correctly ‚Äî check_prior_dens","text":"spec modskurt model specification returned `mskt_spec` pars parameters plot densities , default use_subset whether use specified subset data prob_inner inner probability (high density interval) highlight prob_outer outer probability range plot density ","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_dens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check marginal prior densities are encoded correctly ‚Äî check_prior_dens","text":"patchwork ggplots","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Check prior distribution statistics for potential misspecification clues ‚Äî check_prior_dist","title":"Check prior distribution statistics for potential misspecification clues ‚Äî check_prior_dist","text":"Check prior distribution statistics potential misspecification clues","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check prior distribution statistics for potential misspecification clues ‚Äî check_prior_dist","text":"","code":"check_prior_dist(spec, use_subset = TRUE, n_draws = 50)"},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check prior distribution statistics for potential misspecification clues ‚Äî check_prior_dist","text":"spec modskurt model specification returned `mskt_spec` use_subset whether use specified subset data n_draws number draws joint prior use","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_mskt.html","id":null,"dir":"Reference","previous_headings":"","what":"Check prior predictions of the modskurt mean cover all possible shapes ‚Äî check_prior_mskt","title":"Check prior predictions of the modskurt mean cover all possible shapes ‚Äî check_prior_mskt","text":"Check prior predictions modskurt mean cover possible shapes","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_mskt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check prior predictions of the modskurt mean cover all possible shapes ‚Äî check_prior_mskt","text":"","code":"check_prior_mskt(spec, use_subset = TRUE, n_draws = 50)"},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_mskt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check prior predictions of the modskurt mean cover all possible shapes ‚Äî check_prior_mskt","text":"spec modskurt model specification returned `mskt_spec` use_subset whether use specified subset data n_draws number draws joint prior use","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_mskt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check prior predictions of the modskurt mean cover all possible shapes ‚Äî check_prior_mskt","text":"ggplot object","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"Check prior predictions of excess zero probabilities cover all possible relationships ‚Äî check_prior_zero","title":"Check prior predictions of excess zero probabilities cover all possible relationships ‚Äî check_prior_zero","text":"Check prior predictions excess zero probabilities cover possible relationships","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check prior predictions of excess zero probabilities cover all possible relationships ‚Äî check_prior_zero","text":"","code":"check_prior_zero(spec, use_subset = TRUE, n_draws = 50)"},{"path":"https://hdrab127.github.io/modskurt/reference/check_prior_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check prior predictions of excess zero probabilities cover all possible relationships ‚Äî check_prior_zero","text":"spec modskurt model specification returned `mskt_spec` use_subset whether use specified subset data n_draws number draws joint prior use Plot prob zero median mu_n? just bell curve show works?","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/compile_stanmodels.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile modskurt Stan Models ‚Äî compile_stanmodels","title":"Compile modskurt Stan Models ‚Äî compile_stanmodels","text":"Compile modskurt Stan Models","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/compile_stanmodels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile modskurt Stan Models ‚Äî compile_stanmodels","text":"","code":"compile_stanmodels(force_recompile = FALSE)"},{"path":"https://hdrab127.github.io/modskurt/reference/compile_stanmodels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile modskurt Stan Models ‚Äî compile_stanmodels","text":"force_recompile whether recompile even nothing changed","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/dnbinom2.html","id":null,"dir":"Reference","previous_headings":"","what":"The Negative Binomial Probability Mass Function (alternative parameterisation) ‚Äî dnbinom2","title":"The Negative Binomial Probability Mass Function (alternative parameterisation) ‚Äî dnbinom2","text":"Negative Binomial Probability Mass Function (alternative parameterisation)","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/dnbinom2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Negative Binomial Probability Mass Function (alternative parameterisation) ‚Äî dnbinom2","text":"","code":"dnbinom2(x, mu, kappa, log = FALSE)"},{"path":"https://hdrab127.github.io/modskurt/reference/dnbinom2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Negative Binomial Probability Mass Function (alternative parameterisation) ‚Äî dnbinom2","text":"x vector (non-negative integer) quantiles mu mean kappa dispersion (inverse square root size) log logical; TRUE, probabilities p given log(p)","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/dnbinom2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Negative Binomial Probability Mass Function (alternative parameterisation) ‚Äî dnbinom2","text":"(log) probability mass x, given mu kappa","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/dzinb2.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero-inflated Negative Binomial Probability Mass ‚Äî dzinb2","title":"Zero-inflated Negative Binomial Probability Mass ‚Äî dzinb2","text":"Zero-inflated Negative Binomial Probability Mass","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/dzinb2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-inflated Negative Binomial Probability Mass ‚Äî dzinb2","text":"","code":"dzinb2(x, mu, kappa, zi, log = FALSE)"},{"path":"https://hdrab127.github.io/modskurt/reference/dzinb2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero-inflated Negative Binomial Probability Mass ‚Äî dzinb2","text":"x vector (non-negative integer) values mu mean distribution kappa dispersion (inverse square root size) zi vector (real lying \\[0, 1\\]) zero-inflation parameters log logical; TRUE, probabilities, p, given log(p)","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/dzinb2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero-inflated Negative Binomial Probability Mass ‚Äî dzinb2","text":"(log) probability mass x, given mu, kappa zi","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/kappa_to_phi.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert overdispersion kappa to reciprocal dispersion phi ‚Äî kappa_to_phi","title":"Convert overdispersion kappa to reciprocal dispersion phi ‚Äî kappa_to_phi","text":"Convert overdispersion kappa reciprocal dispersion phi","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/kappa_to_phi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert overdispersion kappa to reciprocal dispersion phi ‚Äî kappa_to_phi","text":"","code":"kappa_to_phi(kappa)"},{"path":"https://hdrab127.github.io/modskurt/reference/kappa_to_phi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert overdispersion kappa to reciprocal dispersion phi ‚Äî kappa_to_phi","text":"kappa overdispersion parameter","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-Modskurt (mskt) unimodal mean function ‚Äî mskt","title":"Log-Modskurt (mskt) unimodal mean function ‚Äî mskt","text":"Log-Modskurt (mskt) unimodal mean function","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-Modskurt (mskt) unimodal mean function ‚Äî mskt","text":"","code":"mskt(x, H, m, s, r = 0.5, d = 0, p = 1)"},{"path":"https://hdrab127.github.io/modskurt/reference/mskt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-Modskurt (mskt) unimodal mean function ‚Äî mskt","text":"x predictor variable (real number vector) H height curve mode (real number > 0) m mode (real number) s scale (real number > 0) r asymmetry (real number (0, 1)) d flatness (real number >= 0) p tail exaggeration (real number (0, 2))","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-Modskurt (mskt) unimodal mean function ‚Äî mskt","text":"vector log-scale mean values (real number vector)","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the specified modskurt model by sampling its posterior distribution ‚Äî mskt_fit","title":"Fit the specified modskurt model by sampling its posterior distribution ‚Äî mskt_fit","text":"Fit specified modskurt model sampling posterior distribution","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the specified modskurt model by sampling its posterior distribution ‚Äî mskt_fit","text":"","code":"mskt_fit(   spec,   use_subset = FALSE,   seed = NULL,   init = NULL,   chains = 4,   parallel_chains = getOption(\"mc.cores\", 1),   iter_warmup = 1000,   iter_sampling = 1000,   max_treedepth = NULL,   adapt_delta = NULL,   show_messages = TRUE,   show_exceptions = FALSE,   ... )"},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the specified modskurt model by sampling its posterior distribution ‚Äî mskt_fit","text":"spec modskurt model specification returned `mskt_spec` use_subset whether use specified subset data seed seed Stan random number generator init initialisation method, see ?cmdstanr::`model-method-sample` chains number Markov chains parallel_chains many cores distribute chains iter_warmup number iterations used learn posterior curvature iter_sampling number posterior samples drawn max_treedepth, adapt_delta tuning parameters, see details show_messages additional verbosity show_exceptions additional verbosity ... additional arguments ?cmdstanr::`model-method-sample`","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the specified modskurt model by sampling its posterior distribution ‚Äî mskt_fit","text":"`cmdstanr::CmdStanMCMC` object","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_inits.html","id":null,"dir":"Reference","previous_headings":"","what":"internal only for initialising from prior ‚Äî mskt_inits","title":"internal only for initialising from prior ‚Äî mskt_inits","text":"internal initialising prior","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_inits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal only for initialising from prior ‚Äî mskt_inits","text":"","code":"mskt_inits(sdat, chains, from_data = TRUE)"},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_sim_nb.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate negative binomial data with a modskurt mean curve ‚Äî mskt_sim_nb","title":"Simulate negative binomial data with a modskurt mean curve ‚Äî mskt_sim_nb","text":"Simulate negative binomial data modskurt mean curve","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_sim_nb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate negative binomial data with a modskurt mean curve ‚Äî mskt_sim_nb","text":"","code":"mskt_sim_nb(   x,   n_per_x = 1,   H,   m,   s,   r = 0.5,   d = 0,   p = 1,   kap,   g0 = -Inf,   g1 = 0 )"},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_sim_nb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate negative binomial data with a modskurt mean curve ‚Äî mskt_sim_nb","text":"x vector environmental gradient values n_per_x number y replicates simulate x value H height m middle s spread r assymetry d flatness p persistence kap negative binomial dispersion g0 constant rate zero-inflation g1 decay zero-inflation mean increases","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_sim_nb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate negative binomial data with a modskurt mean curve ‚Äî mskt_sim_nb","text":"data.frame simulated mu, zi, y x","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify modskurt model for the distribution of `y` over `x` ‚Äî mskt_spec","title":"Specify modskurt model for the distribution of `y` over `x` ‚Äî mskt_spec","text":"Specify modskurt model distribution `y` `x`","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify modskurt model for the distribution of `y` over `x` ‚Äî mskt_spec","text":"","code":"mskt_spec(   data,   y,   x,   effort = NULL,   dist = \"nb\",   shape = \"rdp\",   hyperparams = list(),   pred_grid = NULL,   subset_prop = 1,   subset_seed = NULL )"},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify modskurt model for the distribution of `y` over `x` ‚Äî mskt_spec","text":"data data.frame tibble y species count, optionally named - see details x environmental gradient, optionally named - see details effort sampling effort used observe y dist distribution y x shape shape distribution mean - see ?mskt_shape() hyperparams list hyper-parameters adjust -built priors pred_grid vector x values make y predictions subset_prop proportion data use early model checks subset_seed seed subset sample proportion","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify modskurt model for the distribution of `y` over `x` ‚Äî mskt_spec","text":"list standata prior verification posterior estimation","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/mskt_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify modskurt model for the distribution of `y` over `x` ‚Äî mskt_spec","text":"## Forms discrete (count) data distribution - `\"nb\"`: Negative Binomial - `\"zinbl\"`: Zero-inflated Negative Binomial (Linked) interactive graph count distributions possible parameters available [https://salt-ecology.shinyapps.io/nb-zinbl-prior-specs/](). ## Shapes mean function - default: height (H), mode (m), scale (s) - optional extras   + `\"r\"` assymmetry skew   + `\"d\"` flatness peakedness   + `\"p\"` tail exaggeration pinching can combined desired, e.g. `\"rp\"`, `\"rdp\"`, ... interactive graph modskurt mean function possible parameters available [https://salt-ecology.shinyapps.io/modskurt-prior-specs/]().","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/pzinb2.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero-inflated Negative Binomial Distribution Function ‚Äî pzinb2","title":"Zero-inflated Negative Binomial Distribution Function ‚Äî pzinb2","text":"Zero-inflated Negative Binomial Distribution Function","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/pzinb2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-inflated Negative Binomial Distribution Function ‚Äî pzinb2","text":"","code":"pzinb2(q, mu, kap, zi)"},{"path":"https://hdrab127.github.io/modskurt/reference/pzinb2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero-inflated Negative Binomial Distribution Function ‚Äî pzinb2","text":"q vector quantiles mu mean distribution zi vector (\\([0, 1]\\)) zero-inflation parameters kappa dispersion (inverse square root size)","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/qnbinom2.html","id":null,"dir":"Reference","previous_headings":"","what":"The Negative Binomial Quantile Function (alternative parameterisation) ‚Äî qnbinom2","title":"The Negative Binomial Quantile Function (alternative parameterisation) ‚Äî qnbinom2","text":"Negative Binomial Quantile Function (alternative parameterisation)","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/qnbinom2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Negative Binomial Quantile Function (alternative parameterisation) ‚Äî qnbinom2","text":"","code":"qnbinom2(p, mu, kappa, lower.tail = TRUE, log.p = FALSE)"},{"path":"https://hdrab127.github.io/modskurt/reference/qnbinom2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Negative Binomial Quantile Function (alternative parameterisation) ‚Äî qnbinom2","text":"p vector probabilities mu mean kappa dispersion (inverse square root size) lower.tail logical; TRUE (default), probablities \\(P[X <= x]\\), otherwise, \\([X > x]\\) log.p logical; TRUE, probabilities given log(p)","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/qnbinom2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Negative Binomial Quantile Function (alternative parameterisation) ‚Äî qnbinom2","text":"vector quantiles, correspond probability p","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/qzinb2.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero-inflated Negative Binomial Quantile Function ‚Äî qzinb2","title":"Zero-inflated Negative Binomial Quantile Function ‚Äî qzinb2","text":"Zero-inflated Negative Binomial Quantile Function","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/qzinb2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-inflated Negative Binomial Quantile Function ‚Äî qzinb2","text":"","code":"qzinb2(p, mu, kappa, zi, lower.tail = TRUE, log.p = FALSE)"},{"path":"https://hdrab127.github.io/modskurt/reference/qzinb2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero-inflated Negative Binomial Quantile Function ‚Äî qzinb2","text":"p vector quantile probabilities mu mean distribution kappa dispersion (inverse square root size) zi vector (\\([0, 1]\\)) zero-inflation parameters lower.tail logical; TRUE (default), probabilities \\(P[X <= x]\\), otherwise, \\(P[X > x]\\) log.p logical; TRUE, probabilities p. affect zi","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/qzinb2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero-inflated Negative Binomial Quantile Function ‚Äî qzinb2","text":"vector quantiles, coincide respective probability p","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/redstripe.html","id":null,"dir":"Reference","previous_headings":"","what":"*Sebastes proriger* (redstripe rockfish) estuarine abundance ‚Äî redstripe","title":"*Sebastes proriger* (redstripe rockfish) estuarine abundance ‚Äî redstripe","text":"Discrete counts *sebastes proriger* along Pacific Northwest continental slope shelf","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/redstripe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"*Sebastes proriger* (redstripe rockfish) estuarine abundance ‚Äî redstripe","text":"","code":"data(redstripe)"},{"path":"https://hdrab127.github.io/modskurt/reference/redstripe.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"*Sebastes proriger* (redstripe rockfish) estuarine abundance ‚Äî redstripe","text":"object class tbl_df (inherits tbl, data.frame) 2330 rows 8 columns.","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/redstripe.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"*Sebastes proriger* (redstripe rockfish) estuarine abundance ‚Äî redstripe","text":"<https://www.fisheries.noaa.gov/west-coast/science-data/us-west-coast-groundfish-bottom-trawl-survey>","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages ‚Äî reexports","title":"Objects exported from other packages ‚Äî reexports","text":"objects imported packages. Follow links see documentation. rlang %||%","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/tuangi.html","id":null,"dir":"Reference","previous_headings":"","what":"Tuangi (*Austrovenus structburyi*, NZ Cockle) estuarine abundance ‚Äî tuangi","title":"Tuangi (*Austrovenus structburyi*, NZ Cockle) estuarine abundance ‚Äî tuangi","text":"Discrete counts tuangi intertidal estuaries New Zealand","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/tuangi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tuangi (*Austrovenus structburyi*, NZ Cockle) estuarine abundance ‚Äî tuangi","text":"","code":"data(tuangi)"},{"path":"https://hdrab127.github.io/modskurt/reference/tuangi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tuangi (*Austrovenus structburyi*, NZ Cockle) estuarine abundance ‚Äî tuangi","text":"## `tuangi` data frame 764 rows 11 columns: year Year survey lon, lat Longitude latitude sample count Total tuangi counted 250 gram sediment core mud_pct % sediment muddy (<63microns?) time sampling tn_conc total nitrogen concentration (mg/L) time sampling toc_pct total organic carbon content (%) time sampling tp_conc total phosphorus concentration (mg/L) time sampling sst_min, sst_avg, sst_max Min, mean, max sea surface temperature (deg C) location sampling 12 months preceding","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/tuangi.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Tuangi (*Austrovenus structburyi*, NZ Cockle) estuarine abundance ‚Äî tuangi","text":"<https://www.saltecology.co.nz/>","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/zilink.html","id":null,"dir":"Reference","previous_headings":"","what":"ZINBL zero-inflation link function ‚Äî zilink","title":"ZINBL zero-inflation link function ‚Äî zilink","text":"ZINBL zero-inflation link function","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/zilink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ZINBL zero-inflation link function ‚Äî zilink","text":"","code":"zilink(mu, H, g0, g1)"},{"path":"https://hdrab127.github.io/modskurt/reference/zilink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ZINBL zero-inflation link function ‚Äî zilink","text":"mu mean negative binomial abundance (real number vector) H height curve mode (real number > 0) g0 log-odds probability excess zero mu = 0 g1 rate log-odds probability excess zero decreases mu increases","code":""},{"path":"https://hdrab127.github.io/modskurt/reference/zilink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ZINBL zero-inflation link function ‚Äî zilink","text":"vector excess zero probabilities (real number vector [0, 1])","code":""},{"path":"https://hdrab127.github.io/modskurt/news/index.html","id":"modskurt-021","dir":"Changelog","previous_headings":"","what":"modskurt 0.2.1","title":"modskurt 0.2.1","text":"alpha release","code":""}]
